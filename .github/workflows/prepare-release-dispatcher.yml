name: Fossify release dispatcher

on:
  schedule:
    - cron: "0 5 * * *"
  workflow_dispatch:
    inputs:
      repository:
        description: "Trigger a specific repo or all"
        required: true
        default: "all"
        type: choice
        options:
          - "all"
          - "FossifyOrg/Calculator"
          - "FossifyOrg/Calendar"
          - "FossifyOrg/Camera"
          - "FossifyOrg/Clock"
          - "FossifyOrg/Contacts"
          - "FossifyOrg/File-Manager"
          - "FossifyOrg/Gallery"
          - "FossifyOrg/Keyboard"
          - "FossifyOrg/Launcher"
          - "FossifyOrg/Messages"
          - "FossifyOrg/Music-Player"
          - "FossifyOrg/Notes"
          - "FossifyOrg/Paint"
          - "FossifyOrg/Phone"
          - "FossifyOrg/Thank-You"
          - "FossifyOrg/Voice-Recorder"

concurrency:
  group: "prepare-release-dispatcher-${{ github.event.inputs.repository || 'all' }}"
  cancel-in-progress: true

jobs:
  dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
        with:
          egress-policy: audit

      - id: app-token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const repos = [
              'FossifyOrg/Calculator',
              'FossifyOrg/Calendar',
              'FossifyOrg/Camera',
              'FossifyOrg/Clock',
              'FossifyOrg/Contacts',
              'FossifyOrg/File-Manager',
              'FossifyOrg/Gallery',
              'FossifyOrg/Keyboard',
              'FossifyOrg/Launcher',
              'FossifyOrg/Messages',
              'FossifyOrg/Music-Player',
              'FossifyOrg/Notes',
              'FossifyOrg/Paint',
              'FossifyOrg/Phone',
              'FossifyOrg/Thank-You',
              'FossifyOrg/Voice-Recorder',
            ];

            const selectedRepo = '${{ github.event.inputs.repository }}';
            const manualDispatch = '${{ github.event_name }}' === 'workflow_dispatch';
            let reposToProcess = [];

            if (manualDispatch && selectedRepo) {
              if (selectedRepo === 'all') {
                reposToProcess = repos;
                console.log(`Manual dispatch for all repositories (${repos.length} repos):`, reposToProcess);
              } else {
                reposToProcess = [selectedRepo];
                console.log(`Manual dispatch for: ${selectedRepo}`);
              }
            } else {
              reposToProcess = repos;
              console.log(`Scheduled dispatch to all repositories (${repos.length} repos):`, reposToProcess);
            }

            for (const repoPath of reposToProcess) {
              console.log(`Dispatching to ${repoPath}`);
              const [owner, repo] = repoPath.split('/');

              try {
                await github.rest.repos.createDispatchEvent({
                  owner,
                  repo,
                  event_type: 'prepare-release'
                });
              } catch (e) {
                console.warn(`${repoPath} failed: ${e.message}`);
              }

              await new Promise(r => setTimeout(r, 1000));
            }
