name: Release

on:
  workflow_call:
    inputs:
      track:
        description: "Rollout track (e.g. beta, production)"
        required: false
        type: string
        default: "beta"
      rollout:
        description: "Rollout fraction (0.0-1.0)"
        required: false
        type: string
        default: "0.05"
      validate_only:
        description: "Fastlane dry-run?"
        required: false
        type: boolean
        default: false
      maintainer:
        description: "Maintainer username"
        required: false
        type: string
        default: "naveensingh"

concurrency:
  group: release-${{ github.repository }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version_name: ${{ steps.extract.outputs.version_name }}
      package_name: ${{ steps.extract.outputs.package_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Extract app version and package name
        id: extract
        run: |
          echo "Extracting app version and package name from gradle.properties"
          VERSION_NAME=$(grep '^VERSION_NAME=' gradle.properties | cut -d= -f2)
          PACKAGE_NAME=$(grep '^APP_ID=' gradle.properties | cut -d= -f2)
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT

  release_gplay:
    name: Google Play
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Checkout .github repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          repository: FossifyOrg/.github
          path: .github-repo

      - uses: FossifyOrg/.github/.github/actions/gradle-cache@main
      - uses: FossifyOrg/.github/.github/actions/decode-secrets@main
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

      - name: Set up Ruby & Bundler
        uses: ruby/setup-ruby@efbf473cab83af4468e8606cc33eca9281bb213f
        with:
          ruby-version: "3.3"
          bundler-cache: true

      - name: Set up JDK
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.x"

      - name: Prepare Play Store metadata
        run: python ./.github-repo/scripts/prepare_metadata.py

      - name: Install Fastlane
        run: bundle install

      - name: Decode Play Store JSON key
        run: |
          echo "$SERVICE_ACCOUNT_JSON_KEY_BASE64" | base64 --decode > fastlane/service-account.json
        env:
          SERVICE_ACCOUNT_JSON_KEY_BASE64: ${{ secrets.SERVICE_ACCOUNT_JSON_KEY_BASE64 }}

      - name: Build AAB and upload to Play Store
        run: |
          bundle exec fastlane android deploy
        env:
          FLAVOR: "gplay"
          PACKAGE_NAME: ${{ needs.prepare.outputs.package_name }}
          JSON_KEY: fastlane/service-account.json
          TRACK: ${{ inputs.track }}
          ROLLOUT: ${{ inputs.rollout }}
          VALIDATE_ONLY: ${{ inputs.validate_only }}

      - name: Clean up secrets
        if: always()
        uses: FossifyOrg/.github/.github/actions/cleanup-secrets@main

  release_foss:
    name: GitHub
    needs: [prepare, release_gplay]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Checkout .github repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          repository: FossifyOrg/.github
          path: .github-repo

      - uses: FossifyOrg/.github/.github/actions/gradle-cache@main
      - uses: FossifyOrg/.github/.github/actions/decode-secrets@main
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

      - name: Set up JDK
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build Release APK
        run: ./gradlew assembleFossRelease

      - name: Setup NodeJS
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: "20"
      - name: Install keep-a-changelog parser
        run: npm install keep-a-changelog@2.6.2

      - name: Extract Changelog Notes
        id: extract_changelog
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        with:
          script: |
            const path = require('path');
            const { formatForGitHub } = require('./.github-repo/scripts/changelog-parser.js');

            const changelogPath = path.join(process.env.GITHUB_WORKSPACE, 'CHANGELOG.md');
            const tagVersion = "${{ needs.prepare.outputs.version_name }}";
            if (!tagVersion) {
              throw new Error('VERSION_NAME environment variable is not set.');
            }

            try {
              const notes = formatForGitHub(changelogPath, tagVersion, null, process.env.GITHUB_REPOSITORY);
              core.setOutput('changelog', notes);
            } catch (error) {
              core.setFailed(error.message);
              return;
            }

      - id: app-token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8
        with:
          tag_name: ${{ needs.prepare.outputs.version_name }}
          name: ${{ needs.prepare.outputs.version_name }}
          body: ${{ steps.extract_changelog.outputs.changelog }}
          draft: false
          files: app/build/outputs/apk/foss/release/*release.apk
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Clean up secrets
        if: always()
        uses: FossifyOrg/.github/.github/actions/cleanup-secrets@main
